/**
 * Form Template API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { FormTemplate } from './formTemplate';

export interface Screen { 
    /**
     * A unique identifier for the screen
     */
    id?: string;
    forms?: Array<FormTemplate>;
    /**
     * Specifies the next screen to display upon completion of the current screen.
     */
    dataNextScreen?: string;
    /**
     * Specifies the screen to display upon completion of account linking.
     */
    dataOnAccountsLinkedScreen?: string;
    /**
     * Specifies the screen to display when a pending TFA registration is triggered during registration or login.
     */
    dataOnPendingTfaRegistrationScreen?: string;
    /**
     * Specifies the screen to display when a pending registration is triggered during registration or login.
     */
    dataOnPendingRegistrationScreen?: string;
    /**
     * Specifies the screen to display when a conflicting login identifier is detected during social login.
     */
    dataOnExistingLoginIdentifierScreen?: string;
    /**
     * Specifies the screen to display when a pending verification is triggered during registration or login.
     */
    dataOnPendingVerificationScreen?: string;
    /**
     * Specifies the screen to display when a pending TFA is triggered during registration or login.
     */
    dataOnPendingTfaVerificationScreen?: string;
    /**
     * Specifies the screen to display when a  code is sent to the user's email for verification.
     */
    dataOnPendingEmailVerificationCode?: string;
    /**
     * Specifies the screen to display when a password required during password-less registration ( social login, otp ,fido, etc).
     */
    dataOnMissingLoginidScreen?: string;
    /**
     * Specifies the screen to display when a pending password change is triggered.
     */
    dataOnPendingPasswordChangeScreen?: string;
    /**
     * Specifies the screen to display when a pending recent login is triggered.
     */
    dataOnPendingRecentLoginScreen?: string;
}